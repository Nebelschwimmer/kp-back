name: CI

on:
  push:
    branches:
      - main
  pull_request: ~
  workflow_dispatch: ~

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  tests:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Build Docker images
        uses: docker/bake-action@v6
        with:
          pull: true
          load: true
          files: |
            compose.yaml
            compose.override.yaml
          set: |
            *.cache-from=type=gha,scope=${{github.ref}}
            *.cache-from=type=gha,scope=refs/heads/main
            *.cache-to=type=gha,scope=${{github.ref}},mode=max
      -
        name: Start services
        run: docker compose up --wait --no-build

  lint:
    name: Docker Lint
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Lint Dockerfile
        uses: hadolint/hadolint-action@v3.1.0
      
  deploy:
    name: Deploy to server
    needs: [tests, lint]
    runs-on: ubuntu-latest

    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      - 
        name: Disable host key checking
        run: |
          mkdir -p ~/.ssh
          echo "StrictHostKeyChecking no" > ~/.ssh/config
          echo "UserKnownHostsFile=/dev/null" >> ~/.ssh/config
          chmod 600 ~/.ssh/config
      -
        name: Deploy via SSH
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SERVER_IP}}
          port: 2222
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          script: |
            # whoami
            # cd ~/kp-back
            # ls -l
            # if [ -d .git ]; then
            #   git fetch origin main
            # else
            #   git clone https://github.com/Nebelschwimmer/kp-back.git
            # fi
            # git checkout main
            # git pull
            # docker compose down
            # docker compose up -d
            #!/bin/bash
            # Логируем начало выполнения
            echo "Starting deployment..."

            # Логируем начало выполнения
            echo "Starting deployment..."

            # Проверяем, кто выполняет скрипт
            echo "Running as user: $(whoami)"

            # Переходим в домашнюю директорию
            cd ~ || { echo "Failed to switch to home directory!"; exit 1; }

            # Удаляем старую директорию, если она существует
            if [ -d "kp-back" ]; then
              echo "Removing old kp-back directory..."
              sudo rm -rf kp-back || { echo "Failed to remove old directory!"; exit 1; }
            fi

            # Клонируем репозиторий
            echo "Cloning repository..."
            git clone https://github.com/Nebelschwimmer/kp-back.git kp-back || { echo "Failed to clone repository!"; exit 1; }

            # Переходим в директорию проекта
            cd kp-back || { echo "Directory kp-back not found!"; exit 1; }

            # Переключаемся на ветку main и обновляем её
            echo "Checking out main branch..."
            git checkout main || { echo "Failed to checkout main branch!"; exit 1; }
            echo "Pulling latest changes..."
            git pull || { echo "Failed to pull latest changes!"; exit 1; }

            # Останавливаем и запускаем контейнеры
            echo "Stopping existing containers..."
            docker compose down || { echo "Failed to stop containers!"; exit 1; }

            echo "Starting containers..."
            docker compose up -d || { echo "Failed to start containers!"; exit 1; }

            # Проверяем статус контейнеров
            echo "Container status:"
            docker compose ps

            # Логируем завершение
            echo "Deployment completed!"